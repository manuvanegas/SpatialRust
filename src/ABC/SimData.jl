# I know... but it works.
function tempdata()
    [21.32, 21.33, 21.06, 22.18, 21.87, 21.9, 22.94, 20.17, 21.84, 23.07, 21.43, 21.61, 21.57, 22.31, 23.24, 21.25, 22.41, 21.95, 22.57, 21.24, 21.64, 22.67, 23.17, 22.44, 23.02, 22.54, 21.97, 22.22, 20.97, 20.68, 21.64, 21.54, 22.18, 22.02, 20.53, 22.72, 21.16, 22.3, 22.19, 22.74, 21.71, 20.61, 21.17, 22.69, 21.78, 20.91, 21.5, 22.32, 22.19, 22.4, 21.25, 22.07, 21.46, 20.95, 22.11, 22.56, 21.4, 21.15, 21.88, 20.94, 22.41, 21.22, 22.8, 23.03, 21.44, 21.89, 21.43, 22.62, 21.48, 22.94, 21.9, 21.27, 21.16, 21.64, 21.38, 22.17, 22.01, 22.39, 21.62, 22.79, 22.16, 23.15, 23.14, 21.38, 22.47, 23.4, 24.02, 22.2, 22.94, 21.53, 21.26, 21.68, 21.79, 23.36, 21.37, 21.7, 21.91, 21.78, 22.02, 21.2, 21.67, 22.26, 23.16, 21.5, 22.36, 22.14, 21.93, 20.94, 20.85, 22.16, 22.26, 21.49, 23.08, 22.79, 22.75, 22.0, 21.52, 22.93, 21.93, 22.63, 21.88, 21.28, 22.17, 22.94, 21.62, 21.76, 22.17, 22.66, 22.19, 21.92, 22.21, 21.65, 22.79, 21.76, 20.58, 21.99, 22.44, 23.24, 22.36, 22.91, 21.41, 21.87, 22.23, 22.69, 21.55, 21.5, 21.03, 22.0, 21.8, 22.55, 21.36, 22.89, 21.08, 21.0, 21.97, 23.02, 21.94, 22.43, 23.78, 23.01, 22.91, 23.0, 21.39, 21.67, 21.44, 23.5, 23.14, 20.72, 22.41, 21.63, 22.46, 22.38, 20.04, 20.68, 21.92, 21.72, 21.97, 22.36, 21.28, 21.78, 22.14, 23.02, 21.31, 22.13, 21.05, 22.86, 20.98, 22.51, 21.79, 22.21, 23.13, 21.99, 21.72, 21.12, 22.25, 23.31, 21.7, 22.86, 21.35, 21.07, 22.23, 21.47, 22.53, 22.94, 20.94, 22.23, 22.57, 21.79, 21.69, 22.64, 21.1, 22.67, 22.02, 22.05, 21.43, 22.2, 21.84, 23.24, 22.17, 22.61, 20.86, 22.83, 22.61, 23.4, 21.87, 22.38, 22.01, 21.07, 21.63, 21.62, 22.38, 21.94, 21.88, 21.91, 21.85, 21.72, 21.34, 22.45, 22.62, 21.58, 21.36, 23.24, 21.44, 22.34, 22.35, 22.57, 22.09, 23.09, 21.79, 22.11, 20.63, 21.6, 21.46, 22.51, 22.09, 23.18, 21.87, 22.25, 21.48, 20.9, 22.14, 21.69, 21.58, 21.85, 21.19, 21.42, 22.33, 22.82, 21.68, 21.47, 23.03, 21.57, 21.81, 20.75, 21.79, 22.62, 21.56, 22.12, 21.53, 22.38, 22.04, 22.41, 22.07, 21.64, 21.87, 22.18, 22.4, 22.95, 23.24, 20.65, 21.9, 21.32, 23.22, 20.99, 22.48, 21.02, 20.85, 23.12, 22.81, 21.78, 21.39, 23.06, 23.75, 22.1, 20.98, 21.63, 21.84, 22.06, 21.66, 21.79, 23.3, 22.08, 20.57, 23.23, 22.79, 22.41, 21.34, 23.56, 22.22, 21.28, 21.86, 21.58, 22.57, 22.78, 22.66, 23.14, 21.26, 22.01, 23.02, 22.03, 22.02, 22.41, 21.67, 20.53, 21.8, 22.24, 21.22, 22.07, 22.32, 21.83, 21.0, 22.24, 21.67, 21.5, 21.96, 21.67, 21.6, 21.8, 22.43, 23.14, 21.57, 22.51, 23.08, 20.86, 22.52, 23.5, 21.44, 22.33, 21.34, 20.75, 23.69, 21.79, 22.34, 21.2, 21.67, 23.16, 21.68, 22.36, 20.82, 23.15, 20.62, 22.37, 22.89, 21.53, 23.21, 22.03, 22.37, 20.78, 21.77, 21.84, 21.89, 21.3, 21.63, 22.96, 22.93, 22.07, 22.48, 22.62, 23.01, 22.82, 22.53, 21.82, 22.63, 23.07, 22.46, 21.94, 22.56, 21.12, 22.41, 20.39, 21.58, 21.92, 22.2, 21.44, 21.94, 22.37, 20.58, 23.8, 21.76, 22.09, 22.07, 21.62, 21.43, 22.31, 22.6, 22.03, 21.54, 21.6, 21.84, 22.17, 21.38, 21.62, 22.43, 22.33, 22.88, 22.22, 22.26, 21.99, 22.71, 21.01, 21.84, 21.7, 22.34, 20.93, 21.27, 21.4, 22.46, 22.6, 21.85, 22.2, 22.36, 22.29, 21.52, 22.45, 22.04, 20.41, 22.64, 21.73, 23.37, 22.17, 21.15, 22.02, 21.66, 21.61, 22.17, 22.01, 21.45, 22.95, 22.89, 21.62, 22.48, 21.0, 22.64, 22.76, 22.44, 21.43, 22.79, 21.51, 22.26, 21.63, 21.99, 21.96, 22.07, 22.89, 22.98, 22.27, 23.32, 22.14, 21.64, 22.94, 22.92, 21.84, 23.42, 20.59, 21.63, 20.98, 21.69, 22.81, 21.57, 22.49, 23.73, 22.11, 22.18, 21.29, 22.81, 22.58, 21.71, 22.26, 22.22, 22.47, 21.92, 22.1, 20.77, 20.47, 21.71, 21.51, 21.99, 23.24, 21.61, 21.65, 21.43, 23.16, 22.91, 21.74, 22.65, 20.89, 21.78, 20.41, 22.49, 23.19, 22.1, 22.29, 21.75, 22.2, 21.8, 21.1, 22.45, 22.13, 20.84, 21.35, 21.94, 21.2, 21.91, 22.13, 22.08, 21.29, 22.19, 22.22, 22.27, 22.15, 22.17, 21.33, 22.05, 22.3, 22.1, 21.58, 21.78, 22.21, 21.84, 22.01, 21.52, 22.82, 21.35, 21.6, 19.39, 20.39, 21.36, 21.55, 22.27, 22.11, 21.57, 21.76, 22.03, 21.88, 22.49, 21.51, 21.92, 22.21, 20.74, 22.79, 23.0, 22.2, 22.67, 22.18, 21.19, 21.37, 22.95, 21.36, 21.11, 21.64, 22.61, 21.85, 22.0, 22.01, 22.96, 22.18, 21.93, 21.99, 22.29, 21.16, 22.5, 22.13, 22.13, 22.44, 22.25, 21.45, 22.22, 23.07, 22.0, 22.27, 22.48, 20.28, 21.46, 21.38, 22.14, 20.75, 22.66, 22.32, 21.96, 23.19, 22.46, 21.53, 20.5, 22.77, 22.74, 20.84, 22.15, 20.41, 22.33, 22.95, 22.11, 22.84, 21.1, 22.69, 22.61, 23.6, 23.32, 21.64, 21.51, 21.19, 22.23, 22.5, 21.78, 20.95, 21.85, 20.9, 22.89, 20.97, 21.88, 21.55, 21.98, 22.25, 22.32, 22.13, 21.33, 21.58, 20.82, 20.67, 22.19, 22.76, 22.05, 21.93, 21.72, 21.22, 21.77, 21.02, 22.03, 21.97, 23.54, 22.8, 21.23, 22.4, 22.92, 22.02, 22.34, 21.8, 22.0, 22.8, 21.18, 22.03, 22.28, 21.58, 19.83, 21.98, 21.8, 22.11, 21.95, 22.85, 23.23, 21.57, 22.41, 21.6, 22.42, 21.34, 22.34, 21.27, 21.31, 21.57, 21.8, 22.48, 22.19, 22.91, 22.19, 22.8, 20.98, 23.03, 20.85, 21.08, 21.78, 21.52, 21.56, 21.84, 22.89, 21.91, 22.59, 21.51, 22.92, 22.02, 22.48, 22.8, 20.92, 21.52, 21.99, 21.6, 19.74, 21.7, 21.33, 20.97, 21.12, 23.58, 23.84, 21.04, 23.27, 21.55, 22.17, 22.13, 23.13, 21.28, 23.33, 22.25]
end

function raindata()
    Bool[
        1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1
    ]
end

function winddata()
    Bool[
        1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1
    ]
end

# function collect_days()
#     [
#         23, 29, 36, 42, 50, 57, 64, 71, 84, 91, 98, 105, 112, 119, 126, 133, 147, 154, 161, 168, 175, 182, 189, 196, 266, 273, 280, 287, 294, 301, 308, 315, 322, 329, 336, 343, 350, 357, 364, 372, 378, 385, 392, 399, 406, 413, 420, 427, 434, 442, 448, 455
#     ]
# end

# function pull_empdates()
#     DataFrame(
#         plot = [:shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :shade, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :sun, :shade, :shade, :shade, :sun, :sun, :sun],
#         dayn = [23, 29, 29, 36, 36, 36, 42, 42, 42, 42, 50, 50, 50, 50, 50, 57, 57, 57, 57, 57, 57, 64, 64, 64, 64, 64, 64, 64, 71, 71, 71, 71, 71, 71, 71, 71, 84, 91, 91, 98, 98, 98, 105, 105, 105, 105, 112, 112, 112, 112, 112, 119, 119, 119, 119, 119, 119, 126, 126, 126, 126, 126, 126, 126, 133, 133, 133, 133, 133, 133, 133, 133, 147, 154, 154, 161, 161, 161, 168, 168, 168, 168, 175, 175, 175, 175, 175, 182, 182, 182, 182, 182, 182, 189, 189, 189, 189, 189, 189, 189, 196, 196, 196, 196, 196, 196, 196, 196, 266, 273, 273, 280, 280, 280, 287, 287, 287, 287, 294, 294, 294, 294, 294, 301, 301, 301, 301, 301, 301, 301, 308, 308, 308, 308, 308, 308, 308, 308, 308, 315, 315, 315, 315, 315, 315, 315, 315, 315, 315, 322, 322, 322, 322, 322, 329, 329, 329, 329, 329, 329, 329, 336, 336, 336, 336, 336, 336, 336, 336, 336, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 350, 350, 350, 350, 350, 350, 357, 357, 357, 357, 357, 357, 357, 357, 364, 364, 364, 364, 364, 364, 364, 364, 364, 364, 372, 372, 372, 372, 372, 372, 372, 372, 372, 372, 372, 372, 378, 378, 378, 378, 378, 378, 385, 385, 385, 385, 385, 385, 385, 385, 392, 392, 392, 392, 392, 392, 392, 392, 392, 392, 399, 399, 399, 399, 399, 399, 399, 399, 399, 399, 399, 406, 406, 406, 406, 406, 406, 413, 413, 413, 413, 413, 413, 413, 413, 420, 420, 420, 420, 420, 420, 420, 420, 420, 420, 427, 427, 427, 427, 427, 427, 427, 427, 427, 427, 434, 434, 434, 434, 434, 442, 442, 442, 442, 442, 442, 448, 448, 448, 448, 448, 455, 455, 455, 455, 455, 455, 23, 29, 29, 36, 36, 36, 42, 42, 42, 42, 50, 50, 50, 50, 50, 57, 57, 57, 57, 57, 57, 64, 64, 64, 64, 64, 64, 64, 71, 71, 71, 71, 71, 71, 71, 71, 84, 91, 91, 98, 98, 98, 105, 105, 105, 105, 112, 112, 112, 112, 112, 119, 119, 119, 119, 119, 119, 126, 126, 126, 126, 126, 126, 126, 133, 133, 133, 133, 133, 133, 133, 147, 154, 154, 161, 161, 161, 168, 168, 168, 168, 175, 175, 175, 175, 175, 182, 182, 182, 182, 182, 182, 189, 189, 189, 189, 189, 189, 189, 196, 196, 196, 196, 196, 196, 196, 196, 273, 273, 280, 280, 280, 287, 287, 287, 287, 294, 294, 294, 294, 301, 301, 301, 301, 301, 301, 301, 308, 308, 308, 308, 308, 308, 308, 308, 308, 315, 315, 315, 315, 315, 315, 315, 315, 315, 315, 322, 322, 322, 322, 322, 329, 329, 329, 329, 329, 329, 329, 336, 336, 336, 336, 336, 336, 336, 336, 336, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 343, 350, 350, 350, 350, 350, 357, 357, 357, 357, 357, 357, 357, 357, 364, 364, 364, 364, 364, 364, 364, 364, 364, 372, 372, 372, 372, 372, 372, 372, 372, 372, 372, 372, 378, 378, 378, 378, 378, 385, 385, 385, 385, 385, 385, 385, 385, 392, 392, 392, 392, 392, 392, 392, 392, 392, 399, 399, 399, 399, 399, 399, 399, 399, 399, 399, 406, 406, 406, 406, 406, 413, 413, 413, 413, 413, 413, 413, 420, 420, 420, 420, 420, 420, 420, 420, 420, 427, 427, 427, 427, 427, 427, 427, 427, 427, 427, 434, 434, 434, 434, 434, 442, 442, 442, 442, 442, 442, 448, 448, 448, 448, 448, 448, 455, 455, 455, 455, 455, 455, 455, 427, 448, 455, 133, 315, 427],
#         age = [0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 0, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 3, 4, 5, 6, 0, 0, 1, 1, 2, 2, 3, 4, 5, 7, 0, 0, 1, 2, 3, 0, 0, 1, 1, 2, 3, 4, 0, 0, 1, 1, 2, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 0, 0, 1, 2, 3, 4, 0, 0, 1, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 7, 0, 0, 1, 2, 3, 4, 0, 0, 1, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 0, 0, 1, 2, 3, 4, 0, 0, 1, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 0, 2, 3, 4, 5, 6, 0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 7, 0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 7, 0, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 0, 1, 2, 0, 1, 2, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 3, 4, 5, 6, 0, 0, 1, 1, 2, 3, 4, 5, 6, 7, 0, 0, 1, 2, 3, 0, 0, 1, 1, 2, 3, 4, 0, 0, 1, 1, 2, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 0, 1, 2, 3, 4, 0, 0, 1, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 5, 6, 0, 0, 1, 1, 2, 2, 3, 3, 4, 6, 7, 0, 1, 2, 3, 4, 0, 0, 1, 1, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 4, 5, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 0, 0, 1, 2, 3, 0, 0, 1, 1, 2, 3, 4, 0, 0, 1, 1, 2, 2, 3, 4, 5, 0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 0, 1, 2, 3, 4, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6, 0, 0, 1, 0, 2, 0],
#         cycle = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 5, 4, 5, 4, 4, 4, 4, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 6, 5, 6, 5, 5, 5, 6, 7, 6, 6, 6, 6, 6, 7, 6, 7, 6, 6, 6, 6, 6, 7, 6, 7, 6, 7, 6, 6, 6, 6, 6, 7, 6, 7, 6, 7, 6, 7, 6, 6, 6, 6, 7, 8, 7, 7, 7, 7, 7, 8, 7, 8, 7, 7, 7, 7, 7, 8, 7, 8, 7, 8, 7, 7, 7, 7, 7, 8, 7, 8, 7, 8, 7, 8, 7, 7, 7, 8, 9, 8, 8, 8, 8, 8, 9, 8, 9, 8, 8, 8, 8, 8, 9, 8, 9, 8, 9, 8, 8, 8, 8, 9, 8, 9, 8, 9, 8, 9, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 5, 5, 4, 4, 4, 4, 4, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 6, 5, 6, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 6, 7, 6, 6, 6, 6, 6, 7, 6, 7, 6, 7, 6, 6, 6, 6, 7, 6, 7, 6, 7, 6, 7, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 7, 8, 7, 7, 7, 7, 7, 8, 7, 8, 7, 8, 7, 7, 7, 7, 8, 7, 8, 7, 8, 7, 7, 7, 7, 8, 9, 8, 8, 8, 8, 9, 8, 9, 8, 8, 8, 8, 9, 8, 9, 8, 9, 8, 8, 8, 9, 8, 9, 8, 9, 8, 9, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 2, 4, 8]
#     )
# end

# function pull_empdates()
#     DataFrame(
#         dayn = [71, 71, 71, 71, 71, 71, 133, 133, 133, 133, 133, 133, 196, 196, 196, 196, 196, 196, 315, 315, 315, 315, 315, 315, 343, 343, 343, 343, 343, 343, 372, 372, 372, 372, 372, 372, 399, 399, 399, 399, 399, 399, 427, 427, 427, 427, 427, 427, 455, 455, 455, 455, 455, 455],
#         category = [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5]
#     )
# end

#meantemp 22
#rainprob 0.8
#windprob 0.75
function createweather(rain_prob, wind_prob, mean_temp, steps, rng)
    raindata = rand(rng, steps) .< rain_prob
    return Weather(
        raindata,
        rand(rng, steps) .< ifelse.(raindata, wind_prob - 0.1, wind_prob + 0.1),
        round.(rand(rng, Normal(mean_temp, 0.75), steps), digits = 2)
    )
end

